/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example
import java.time.LocalDateTime
import java.time.format.DateTimeFormatter

fun main() {
    println("¡Hola, Kotlin!")

    imprimirNombreYFecha()
    mostrarTiposDeDatos()
    procesarRectangulo()
    numeroPosNegCero()
    numerosPares()
    fun exponente()
}

fun imprimirNombreYFecha() {
    val fechaActual = LocalDateTime.now()
    val formatoFecha = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss")
    val fechaFormateada = fechaActual.format(formatoFecha)

    val nombre: String = "Mateo Gomez"

    println("Nombre: $nombre")
    println("Fecha actual: $fechaFormateada")
}

fun mostrarTiposDeDatos() {
    val nombre: String = "Mateo"
    val edad: Int = 16
    val altura: Double = 1.89
    val esEstudiante: Boolean = true
    
    println("Nombre: $nombre")
    println("Edad: $edad")
    println("Altura: $altura")
    println("Es estudiante: $esEstudiante")
}

fun procesarRectangulo() {
    val largo: Double = 7.5
    val ancho: Double = 4.5
    val area = largo * ancho
    
    println("El rectángulo tiene:")
    println("Largo: $largo")
    println("Ancho: $ancho")
    println("Área: $area")
}

fun numeroPosNegCero() {
    val numero1: Int = 2
    val numero2: Int = -6
    val numero3: Int = 0

    val resultado1 = if (numero1 > 0) "el numero 1 es positivo" else if (numero1 < 0) "el numero 1 es negativo" else "el numero 1 es cero"
    val resultado2 = if (numero2 > 0) "el numero 2 es positivo" else if (numero2 < 0) "el numero 2 es negativo" else "el numero 2 es cero"
    val resultado3 = if (numero3 > 0) "el numero 3 es positivo" else if (numero3 < 0) "el numero 3 es negativo" else "el numero 3 es cero"
    
    println(resultado1)
    println(resultado2)
    println(resultado3)
}

fun numerosPares() {
    //for

    println("Usando for:")
    for (i in 2..20 step 2) {
        println (i)
    }

    //while

    println("Usando while:")
    var j = 2
    while (j <= 20) {
        println(j)
        j += 2
    }

    //do-while

    println("Usando do-while:")
    var k = 2
    do {
        println(k)
        k += 2
    } while (k <= 20)

}

fun exponente() {
    val base: Int = 2
    val exponente: Int = 4
    var resultado = 1

    for (i in 1..exponente){ 
        resultado *= base
    }
    println (resultadoFinal)
}